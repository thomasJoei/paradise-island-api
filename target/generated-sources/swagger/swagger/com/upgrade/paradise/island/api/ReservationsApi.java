/**
 * NOTE: This class is auto generated by the swagger code generator program (2.2.3).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.upgrade.paradise.island.api;

import com.upgrade.paradise.island.api.dto.ErrorResponse;
import com.upgrade.paradise.island.api.dto.ReservationDto;
import com.upgrade.paradise.island.api.dto.ReservationFieldsDto;

import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2020-02-22T15:57:44.805-05:00")

@Api(value = "reservations", description = "the reservations API")
public interface ReservationsApi {

    @ApiOperation(value = "create a reservation", notes = "create a reservation", response = ReservationDto.class, tags={ "reservations", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "", response = ReservationDto.class),
        @ApiResponse(code = 422, message = "Input Validation, error will contain the details", response = ErrorResponse.class) })
    
    @RequestMapping(value = "/reservations",
        produces = { "application/json" }, 
        method = RequestMethod.POST)
    default ResponseEntity<ReservationDto> createReservation(@ApiParam(value = "" ,required=true )  @Valid @RequestBody ReservationFieldsDto reservationFieldsDto) {
        // do some magic!
        return new ResponseEntity<ReservationDto>(HttpStatus.OK);
    }


    @ApiOperation(value = "delete a reservation", notes = "delete a reservation", response = Void.class, tags={ "reservations", })
    @ApiResponses(value = { 
        @ApiResponse(code = 204, message = "Reservation deleted with success", response = Void.class) })
    
    @RequestMapping(value = "/reservations/{reservationId}",
        produces = { "application/json" }, 
        method = RequestMethod.DELETE)
    default ResponseEntity<Void> deleteReservation(@ApiParam(value = "reservation unique identifier.",required=true ) @PathVariable("reservationId") Integer reservationId) {
        // do some magic!
        return new ResponseEntity<Void>(HttpStatus.OK);
    }


    @ApiOperation(value = "get a reservation", notes = "get a reservation", response = ReservationDto.class, tags={ "reservations", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "", response = ReservationDto.class) })
    
    @RequestMapping(value = "/reservations/{reservationId}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<ReservationDto> getReservation(@ApiParam(value = "reservation unique identifier.",required=true ) @PathVariable("reservationId") Integer reservationId) {
        // do some magic!
        return new ResponseEntity<ReservationDto>(HttpStatus.OK);
    }


    @ApiOperation(value = "update a reservation", notes = "update a reservation", response = ReservationDto.class, tags={ "reservations", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "", response = ReservationDto.class),
        @ApiResponse(code = 422, message = "Input Validation, error will contain the details", response = ErrorResponse.class) })
    
    @RequestMapping(value = "/reservations/{reservationId}",
        produces = { "application/json" }, 
        method = RequestMethod.PUT)
    default ResponseEntity<ReservationDto> updateReservation(@ApiParam(value = "reservation unique identifier.",required=true ) @PathVariable("reservationId") Integer reservationId,@ApiParam(value = "" ,required=true )  @Valid @RequestBody ReservationFieldsDto reservationFieldsDto) {
        // do some magic!
        return new ResponseEntity<ReservationDto>(HttpStatus.OK);
    }

}
